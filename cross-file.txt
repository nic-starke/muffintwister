#
# File: xmega-cross ( 1st November 2021 )
# Project: Muffin
# Copyright 2021 - 2021 Nicolaus Starke  
# -----
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see http://www.gnu.org/licenses/.
#

[constants]
F_CPU           = '32000000'
F_USB           = '48000000'
MCU             = 'atxmega128a4u'
MCU_ARCH        = 'ARCH_XMEGA'
MCU_DEFINE      = 'ATXMEGA128A4U'
USR_BOARD       = 'USER_BOARD'
AVR_GCC_PATH	  = '/usr/local/avr/bin/'
AVR_LIBC_PATH	  = '/usr/local/avr/avr/include/'
LIB_XMEGA7_PATH	= '/usr/local/avr/avr/lib/avrxmega7'

[host_machine]
system          = 'baremetal'
cpu_family 		  = 'avr'
cpu 			      = 'atxmega128a4u'
endian 			    = 'little'

[binaries]
addr2line 		  = AVR_GCC_PATH / 'avr-addr2line'
# ar 				    = AVR_GCC_PATH / 'avr-ar'
as 				      = AVR_GCC_PATH / 'avr-as'
elfedit			    = AVR_GCC_PATH / 'avr-elfedit'
cpp 			      = AVR_GCC_PATH / 'avr-g++'
c 				      = AVR_GCC_PATH / 'avr-gcc'
ranlib 			    = AVR_GCC_PATH / 'avr-gcc-ranlib'
gcov 			      = AVR_GCC_PATH / 'avr-gcov'
gcov-dump 		  = AVR_GCC_PATH / 'avr-gcov-dump'
gcov-tool 		  = AVR_GCC_PATH / 'avr-gcov-tool'
gdb 			      = AVR_GCC_PATH / 'avr-gdb'
gdb-add-index 	= AVR_GCC_PATH / 'avr-gdb-add-index'
gprof 			    = AVR_GCC_PATH / 'avr-gprof'
ld 				      = AVR_GCC_PATH / 'avr-ld'
lto-dump 		    = AVR_GCC_PATH / 'avr-lto-dump'
avr-man 		    = AVR_GCC_PATH / 'avr-man'
nm 				      = AVR_GCC_PATH / 'avr-nm'
objcopy 		    = AVR_GCC_PATH / 'avr-objcopy'
objdump 		    = AVR_GCC_PATH / 'avr-objdump'
#ranlib 		    = AVR_GCC_PATH / 'avr-ranlib'
readelf 		    = AVR_GCC_PATH / 'avr-readelf'
run 			      = AVR_GCC_PATH / 'avr-run'
size 		    = AVR_GCC_PATH / 'avr-size'
strings 		    = AVR_GCC_PATH / 'avr-strings'
strip 			    = AVR_GCC_PATH / 'avr-strip'
avrdude 		    = AVR_GCC_PATH / 'avrdude'

[properties]
objcopy_hex_args = [
  '-O',
  'ihex',
  '-R',
  '.eeprom',
  '@INPUT@',
  '@OUTPUT@']

objcopy_bin_args = [
  '-O',
  'binary',
  '-R',
  '.eeprom',
  '@INPUT@',
  '@OUTPUT@']

objcopy_eep_args = [
  '-j',
  '.eeprom',
  '--no-change-warnings',
  '--set-section-flags=.eeprom=alloc,load',
  '--change-section-lma',
  '.eeprom=0',
  '-O',
  'ihex',
  '@INPUT@',
  '@OUTPUT@']

_MCU_ = MCU

[built-in options]
warning_level='1'
buildtype='release'

c_args = [
  '-I' + AVR_LIBC_PATH,
  '-O3',
  '-Wno-pedantic',
  # '-Wall',
  # '-Wextra',
  # '-Wpedantic',
  '-mmcu=' + MCU,
  '-DARCH=' + MCU_ARCH,
  '-D' + MCU_DEFINE,
  '-DF_USB=' + F_USB,
  '-DF_CPU=' + F_CPU,
  '-DBOARD=' + USR_BOARD,
  '-DUSE_LUFA_CONFIG_HEADER',
  '-DRELEASE',
  # '-DNDEBUG',
  '-fdata-sections',
  '-ffunction-sections',
  '-fpack-struct',
  '-fshort-enums',
  '-std=gnu99',
  '-mrelax',
  ]

c_link_args = [
  '-mmcu=' + MCU,
  '-lm',
  '-Wl,-Map=Muffin.Map',
  '-Wl,--gc-sections',
  '-B' + LIB_XMEGA7_PATH,
  ]